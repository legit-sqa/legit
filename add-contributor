#!/bin/sh

. legit-setup.sh

name=
email=
while test $# != 0
do
    case "$1" in
        --name)
            shift
            name=$1

            if test -z "$name"
            then
                echo "--name requires a name"
                usage
            fi
            ;;
        --email)
            shift
            email=$1

            if test -z "$email"
            then
                echo "--email requires an email"
                usage
            fi
            ;;
        *)
            usage
    esac
    shift
done

if test -z "$name"
then
    name=$(git config user.name)

    if test -z "$name"
    then
        die "fatal: Couldn't find a username"
    fi
fi

if test -z "$email"
then
    email=$(git config user.email)

    if test -z "$email"
    then
        die "fatal: Couldn't find a user email"
    fi
fi

user_file=${email//@/_}

users=($(git ls-tree refs/tracking/main | grep 'users$'))

if ! test -z $(git ls-tree ${users[2]} | grep '$user_file$')
then
    die "This user already exists in the system"
fi

file=$(git hash-object -w --stdin <<EOF
User: $name
Proposals: 0
Accepted: 0
Rejected: 0
Reviews: 0
Bad-Rejects: 0
Bad-Accepts: 0
Good-Accepts: 0
Good-Rejects: 0
EOF
)

user_tree=$(
{
    echo 100644 blob $file$'\t'$user_file
    git ls-tree ${users[2]}
} | git mktree --missing)

new_root=$(
    git ls-tree refs/tracking/main |
    sed -e "s/[0-9a-z]\+\tusers$/$user_tree\tusers/" |
    git mktree --missing)

commit=$(git commit-tree -m "Added User: $name <$email>" -p refs/tracking/main $new_root)
git update-ref refs/tracking/main $commit

echo "Added User: $name <$email>"